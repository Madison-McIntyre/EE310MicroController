/*/*
 * ---------------------
 * Title: Calculator with 4x4 keypad
 * ---------------------
 * Program Details:
 *  The purpose of this program is to create a calculator by inputing values
 * on a 4x4 keypad, then displaying the output on 7 LEDs the resemble the output 
 * Value
 * Inputs: 4x4 keypad 
 * Outputs: PORTD (output), 7 LEDs
 * Setup: C- Simulator
 * Date: March 0, 2024
 * File Dependencies / Libraries: It is required to include the 
 * File:   Calculator.c
 * Configuration Header File 
 * Compiler: xc8, 2.4
 * Author: Madison McIntyre
 * Versions:
 *      V0.1: Start Code 3/28/24
 *      V0.2: set up functions 4/5/24
 *      V0.3: Debug 4/6/24
 *      V0.4: Finish debug and comment 4/8/24
 *      V1.0: completion 4/9/24
 * Useful links:  
 *      Datasheet: https://ww1.microchip.com/downloads/en/DeviceDoc/PIC18(L)F26-27-45-46-47-55-56-57K42-Data-Sheet-40001919G.pdf 
 *      PIC18F Instruction Sets: https://onlinelibrary.wiley.com/doi/pdf/10.1002/9781119448457.app4 
 *      List of Instrcutions: http://143.110.227.210/faridfarahmand/sonoma/courses/es310/resources/20140217124422790.pdf 
 */
// PIC18F46K42 Configuration Bit Settings

#include <xc.h> // must have this
#include "C:/Program Files/Microchip/xc8/v2.46/pic/include/proc/pic18f46k42.h"
#include "/CalcHeader.h"


#define _XTAL_FREQ 4000000                 // Fosc  frequency for _delay()  library
#define FCY    _XTAL_FREQ/4


#include <stdio.h>
#include <stdlib.h>
#include <math.h>

unsigned char keyPress();


void main (void) {
    TRISD = 0;          //Initialize PORTD for outputs
    ANSELD = 0;         //make PORTD digital
    PORTD = 0;
    TRISB = 0xF0;       //set PORTB 4-7 for inputs, and PORTB 0-3 for outputs
    WPUB = 0xFF;        //weak pull-up resistors PORTB
    ANSELB = 0;
    PORTB= 0xF0;        //assume PORTB inputs start on, (High)
    char xInReg = 0;    //set Row register
    char yInReg = 0;    //set Column register
    char opReg = 0;     //set Operation Register
    char disReg = 0;    //Display output Register
                        //display = Row operation Column
    unsigned char button = 0;
    
    button = keyPress();    //input first digit
    while  (button == 16) {     //Delay until key is pressed
        button = keyPress();
    }
    if (button > 9)         //check for valid input (0-9)
        return;
    xInReg = button;        //store row value
    PORTD = 1;             //input 1 LED on
    __delay_ms(200);
    
    button = keyPress();    //input operator function
    while  (button == 16) {     //Delay until key is pressed
        button = keyPress();
    }
    if (button <= 9)        // check for valid input (a-d))
        return;
    if (button >= 14)
        return;
    opReg = button;         //store operator value
    __delay_ms(200);
    
    button = keyPress();    //input second digit 
    while  (button == 16) {     //wait until key is press
        button = keyPress();
    }
    if (button > 9)         // check for valid input (0-9)
        return;
    yInReg = button;        //store value
    PORTD = 2;             // input 2 LED on
    __delay_ms(200);
    
    button = keyPress();
    while  (button == 16) {     //wait for key press
        button = keyPress();
    }
    if (button != 22)       // check for valid key press (#)
        return;
    
    if (opReg == 10) {      //addition function
        disReg = xInReg + yInReg;
    }   
    else if (opReg == 11)    {      //subtraction function
        disReg = xInReg - yInReg;
    }
    else if (opReg == 12)    {      //multiplication function
        disReg = xInReg * yInReg;
    }
    else if (opReg == 13)    {      //division function
        disReg = xInReg / yInReg;
    }
    
    PORTD = disReg;     //initilize LEDs for output
    __delay_ms(200);
    button = keyPress();    //delay until key is pressed
    while (button == 16)
        button = keyPress();
    return;
}

unsigned char keyPress () {    // keypad input initilized 
    unsigned int keypad[4][4] = {1,2,3,10,
                                  4,5,6,11,
                                  7,8,9,12,
                                  21,0,22,13};
    unsigned char temp = 0, COL = 0, ROW = 0; //set to 0 at start
    __delay_ms(100);                           
    temp = PORTB;                               // reading input         
    temp ^= 0xF0;
    if(!temp) return 16;                        // check if column is on
    while(temp<<= 1) COL ++;
    PORTB = 0xFE;
    if(PORTB != 0xFE)                           // check if Row is on or off
        ROW = 0;
    else {
        PORTB = 0xFD;
        if(PORTB != 0xFD)
            ROW = 1;
        else {
            PORTB = 0xFB;
            if(PORTB != 0xFB)
                ROW = 2;
                else {
                    PORTB = 0xF7;
                    if(PORTB != 0xF7)
                        ROW = 3;
                    else {
                        return 16;
                    }
                }
            }
        }
    PORTB = 0xF0;       //reset portB
    return keypad[ROW][COL];
    
    
}
